<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
  <head>
    <title>OGC Catalogue 3.0 Conformance Test Suite</title>
    <meta charset="UTF-8" />
    <style type="text/css">
body {
  color: black;
  background: white;
  font-family: Georgia, serif;
}
h1, h2, h3 {
  font-family: Verdana, sans-serif;
  color: #000099;
  text-align: left;
}
h1 {
  font-size: 1.4em;
  margin-top: 2em;
}
h2 {
  font-size: 1.2em;
}
h3 {
  font-size: 1em;
  margin-bottom: 0.5em;
}
table {
  margin-top: 0.5em;
  margin-bottom: 1em;
  border-collapse: collapse;
}
td, th {
  padding: 0.25em;
  border: 1px solid black;
}
caption, figcaption {
  font-weight: bold;
  text-align: left;
  margin: 0.25em;
}
th {
  font-weight: bold;
  font-family: Verdana, sans-serif;
  text-align: left;
  vertical-align: top;
  background: #eeeeee;
  color: #000099;
}
dt {
  margin-top: 0.5em;
  font-weight: bold;
}
    </style>
  </head>
  <body>
  <h1>OGC Catalogue 3.0 Conformance Test Suite</h1>
	<h2>Scope</h2>
	<p>Conformance testing is a kind of "black box" testing that examines only the 
  externally visible characteristics or behaviors of the implementation under test 
  (IUT) and is independent of any implementation details. This executable test suite 
  (ETS) verifies the behavior of the IUT with respect to the set of specifications 
  listed under "Test requirements"; the specification dependencies are shown in 
  Figure 1.</p>

  <figure>
    <img src="./img/specifications.png" alt="Set of relevant specifications"/>
    <figcaption><p><strong>Figure 1</strong> - Relevant specifications</p></figcaption>
  </figure>

	<p>There are 24 conformance classes defined in the principal specification 
  (OGC 12-176r5); only a subset of these are covered by this test suite:</p>
	<dl>
    <dt>Basic-Catalogue</dt>
    <dd>Basic search and retrieval functionality required of all implementations; 
    there are several subsidiary conformance classes that introduce additional 
    requirements:
    <ul>
	    <li>Filter-FES-KVP</li>
      <li>CSW-response</li>
      <li>ATOM-response</li>
    </ul>
    </dd>
    <dt>OpenSearch</dt>
    <dd>Supports OpenSearch 1.1 parameters, including extensions for simple 
    spatial (bounding box) queries.</dd>
  </dl>

  <h2>Test suite structure</h2>

  <p>The test suite definition file (testng.xml) is located in the root package, 
  <code>org.opengis.cite.cat30</code>. A conformance class corresponds to a &lt;test&gt;
  element; each test element includes a set of test classes that define the actual 
  test methods. The general structure of the test suite is shown in Table 1.</p>

  <table border="1" style="border-collapse: collapse;">
    <caption>Table 1 - Test suite structure</caption>
    <thead>
      <tr style="background-color:#eeeeee;">
        <th style="width: 35%;">Conformance class</th>
        <th>Test classes</th>
      </tr>
    </thead>
    <tbody>
      <tr style="vertical-align: top;">
        <td>Basic-Catalogue</td>
        <td>
          <ul style="list-style: none;">
            <li>org.opengis.cite.cat30.basic.*</li>
          </ul>
        </td>
      </tr>
      <tr style="vertical-align: top;">
        <td>OpenSearch</td>
        <td>
          <ul style="list-style: none;">
            <li>org.opengis.cite.cat30.opensearch.*</li>
          </ul>
        </td>
      </tr>
    </tbody>
  </table>

  <p>The Javadoc documentation provides more detailed information about the test 
  methods that constitute the suite.</p>

	<h2>Test requirements</h2>
	<p>The documents listed below stipulate requirements that must be satisfied 
	by a conforming implementation.</p>
	<ul>
	  <li style="list-style: square;"><a target="_blank" 
    href="http://docs.opengeospatial.org/is/12-176r7/12-176r7.html">
    OGC 12-176r7</a> OGC Catalogue Services 3.0 Specification &#x2013; HTTP Protocol 
    Binding</li>
    <li style="list-style: square;"><a target="_blank" 
    href="http://docs.opengeospatial.org/is/12-168r6/12-168r6.html">
    OGC 12-168r6</a> Catalog Services Specification 3.0 &#x2013; General Model</li>
	  <li style="list-style: square;"><a target="_blank" 
    href="https://portal.opengeospatial.org/files/?artifact_id=61520&amp;version=1">
    OGC 14-014r3</a> OGC Catalogue Services 3.0 Specification &#x2013; HTTP Protocol 
    Binding &#x2013; Abstract Test Suite</li>
    <li style="list-style: square;"><a target="_blank" 
    href="https://portal.opengeospatial.org/files/?artifact_id=56866&amp;version=2">
    OGC 10-032r8</a> OGC OpenSearch Geo and Time Extensions, Version 1.0</li>
    <li style="list-style: square;"><a target="_blank" 
    href="http://www.opensearch.org/Specifications/OpenSearch/1.1">OpenSearch</a> 
    OpenSearch 1.1, Draft 5</li>
    <li style="list-style: square;"><a target="_blank" 
    href="http://tools.ietf.org/html/rfc4287">RFC 4287</a> The Atom Syndication Format</li>
	</ul>

  <p>If any of the following preconditions are not satisfied then all tests in 
  the suite will be marked as skipped.</p>
  <ol>
    <li>the 'iut' test run argument refers to a CSW 3.0 capabilities document;</li>
    <li>the service it describes is available.</li>
  </ol>

	<h2>How to run the tests</h2>
	<p>The test suite may be run in any of the following environments:</p>
	<ul>
	  <li style="list-style: square;">Integrated development environment (IDE): 
    The main Java class is <code>org.opengis.cite.cat30.TestNGController</code>.
    The first argument must refer to an XML properties file containing the 
    required test run argument (a reference to a CSW 3.0 capabilities document). 
    If not specified, the default location at ${user.home}/test-run-props.xml 
    will be used. You can modify the sample file in src/main/config/test-run-props.xml.
    The TestNG results file (testng-results.xml) will be written to a 
    subdirectory in ${user.home}/testng/ having a UUID value as its name.
    </li>
	  <li style="list-style: square;">RESTful API: Submit a request that includes 
    the required arguments to the test run controller (/rest/suites/cat30/${project.version}/run).</li>
    <li style="list-style: square;">Command shell (console): Execute the "all-in-one" 
    JAR file:
    <pre>java -jar ets-cat30-${version}-aio.jar [-o|--outputDir $TMPDIR] [test-run-props.xml]</pre>.</li>
    <li style="list-style: square;">TEAM-Engine: Run the CTL script located in the <code>/src/main/ctl/</code> 
	  directory.</li>
	</ul>

	<p>The test run arguments are summarized in Table 2. The <em>Obligation</em> 
	descriptor can have the following values: M (mandatory), O (optional), or C 
	(conditional).</p>
	<table border="1" style="border-collapse: collapse;">
	  <caption>Table 2 - Test run arguments</caption>
	  <thead>
      <tr>
        <th>Name</th>
        <th>Value domain</th>
		<th>Obligation</th>
		<th>Description</th>
      </tr>
      </thead>
	  <tbody>
      <tr>
        <td>iut</td>
        <td>URI</td>
		<td>M</td>
		<td>A URI that refers to a service capabilities document (csw:Capabilities) 
    that describes the implementation under test. Ampersand ('&amp;') characters 
    must be percent-encoded as '%26'.</td>
      </tr>
	  </tbody>
    </table>

  </body>
</html>
